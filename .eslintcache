[{"C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\index.js":"1","C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\App.js":"2","C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\components\\Cards\\Cards.jsx":"3","C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\components\\Chart\\Chart.jsx":"4","C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\components\\CountryPicker\\CountryPicker.jsx":"5","C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\components\\index.js":"6","C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\api\\index.js":"7"},{"size":150,"mtime":1607390461841,"results":"8","hashOfConfig":"9"},{"size":948,"mtime":1607657630257,"results":"10","hashOfConfig":"9"},{"size":2525,"mtime":1607490758687,"results":"11","hashOfConfig":"9"},{"size":1293,"mtime":1607585376213,"results":"12","hashOfConfig":"9"},{"size":996,"mtime":1607655670882,"results":"13","hashOfConfig":"9"},{"size":166,"mtime":1607391124174,"results":"14","hashOfConfig":"9"},{"size":1157,"mtime":1607656330913,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1buxst5",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\index.js",[],["33","34"],"C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\App.js",[],"C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\components\\Cards\\Cards.jsx",["35"],"import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\components\\Chart\\Chart.jsx",["36"],"import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = () => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        // console.log(dailyData);\r\n\r\n        fetchAPI();\r\n    });\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n        <Line \r\n            data ={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\components\\CountryPicker\\CountryPicker.jsx",[],"C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\components\\index.js",[],"C:\\Users\\tloen\\Desktop\\github projects\\corona\\src\\api\\index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":47,"nodeType":"43","messageId":"44","endLine":2,"endColumn":61},{"ruleId":"41","severity":1,"message":"45","line":3,"column":16,"nodeType":"43","messageId":"44","endLine":3,"endColumn":19},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'StylesProvider' is defined but never used.","Identifier","unusedVar","'Bar' is defined but never used.","no-global-assign","no-unsafe-negation"]